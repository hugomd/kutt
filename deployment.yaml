apiVersion: apps/v1
kind: Deployment
metadata:
  name: kutt
  namespace: kutt
spec:
  selector:
    matchLabels:
      app: kutt
  template:
    metadata:
      labels:
        app: kutt
    spec:
      imagePullSecrets:
      - name: github-registry
      containers:
      - image: docker.pkg.github.com/hugomd/kutt/kutt:392c4fe
        name: kutt
        ports:
        - containerPort: 3000
        env:
          - name: PORT
            value: "3000"
          - name: SITE_NAME
            value: "Kutt"
          - name: DEFAULT_DOMAIN
            value: "kutt.ii.md"
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: config
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: config
                key: DB_PORT
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: config
                key: DB_NAME
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: config
                key: DB_USER
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: config
                key: DB_PASSWORD
          - name: RECAPTCHA_SITE_KEY
            valueFrom:
              secretKeyRef:
                name: config
                key: RECAPTCHA_SITE_KEY
          - name: RECAPTCHA_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: config
                key: RECAPTCHA_SECRET_KEY
          - name: MAIL_HOST
            valueFrom:
              secretKeyRef:
                name: config
                key: MAIL_HOST
          - name: MAIL_PORT
            valueFrom:
              secretKeyRef:
                name: config
                key: MAIL_PORT
          - name: MAIL_USER
            valueFrom:
              secretKeyRef:
                name: config
                key: MAIL_USER
          - name: MAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: config
                key: MAIL_PASSWORD
          - name: DB_SSL
            value: "true"
          - name: REDIS_HOST
            value: "localhost"
          - name: REDIS_PORT
            value: "6379"
          - name: REDIS_PASSWORD
            value: ""
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: config
                key: JWT_SECRET
          - name: ADMIN_EMAILS
            valueFrom:
              secretKeyRef:
                name: config
                key: ADMIN_EMAILS
      - name: redis
        image: redis
        ports:
          - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: kutt
  namespace: kutt
spec:
  selector:
    app: kutt
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dash-kutt
  namespace: kutt
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.ii.md/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.ii.md/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
spec:
  rules:
  - host: kutt.ii.md
    http:
      paths:
      - path: /
        backend:
          serviceName: kutt
          servicePort: 80
  tls:
    - secretName: dash-kutt-wildcard-tls-prod-cert
      hosts:
        - kutt.ii.md
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kutt
  namespace: kutt
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
spec:
  rules:
  - host: hu.md
    http:
      paths:
      - path: /
        backend:
          serviceName: kutt
          servicePort: 80
  tls:
    - secretName: kutt-wildcard-tls-prod-cert
      hosts:
        - hu.md
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: kutt-tls-prod-cert
  namespace: kutt
spec:
  secretName: kutt-wildcard-tls-prod-cert
  # duration: 2160h # 90d
  # renewBefore: 2159h # 15d
  commonName: hu.md
  dnsNames:
  - hu.md
  uriSANs:
  - spiffe://cluster.local/ns/sandbox/sa/example
  issuerRef:
    name: letsencrypt-prod
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: ClusterIssuer
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: dash-kutt-tls-prod-cert
  namespace: kutt
spec:
  secretName: dash-kutt-tls-prod-cert
  # duration: 2160h # 90d
  # renewBefore: 2159h # 15d
  commonName: kutt.ii.md
  dnsNames:
  - kutt.ii.md
  uriSANs:
  - spiffe://cluster.local/ns/sandbox/sa/example
  issuerRef:
    name: letsencrypt-prod
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: ClusterIssuer
